__________________________________
Работа с файлами
-----------------------------------
Альтернативный способ работать с буферами это работа с каналами
Класс Path
Чтобы получить доступ к файлы нучно использовать Paths
Контродировать буфер - ByteBuffer
Канал - SeekableByteChannel

Задание FileEx - прочитать файл и вывести его на экран

-----------------------------------------
Коллекции
-----------------------------------------
Фреймфорк предназначенный для работы со структурами данных
Содержит структуры данных и алгоритмы работы с ними
Структуры данных представлены в виде класс и предаставлены в виде иерархии типов
Level 1 (Interfaces)
        Iterator - <>Iterable
                        /\
                    /   |    \
                 List, Set, Queue,
                        |       \
                    Sorted Set  Deque
                        |
                  Navigable Set
__________________________________________________________
Level 1 for MapEntry
                     Map.Entry
                        |
                       Map
                        |
                     SortedMap
                        |
                    NavigableMap

Level 2 AbstractClasses (to many so skipp)
Level 3 Classes
                        List
                        /   \
                     /         \
                ArrayList     LinkedList

Итератор
---------------------------------------------------------------
Итератор предназначчен для обхода коллекции (последовательный перебор всех элементов коллекции)
Iterator
    - boolean hasNext();
    - E next();
    - E remove(); - удаляет элемент из коллекции который был был полчен методлм next
    - void forEachRemaining(Consumer) - предназначен для выполнения действия с каждым оставшимся элементом коллекции. Само действие находится в объекте через ссылку Cosumer
Not Finished Задание
 - Написать метод удяляющий из списка те элементы которые меньше предыдущего более чем на 5.
 Нельзя использовать методы класса лист. Только итератор

 Множества (SET)
---------------------------------------------------------------
Неупорядоченный набор не повторяющихся елементов
- boolean contains(E) - определяет есть или нет элемент в множестве

                SET
               /    \
             /        \
         HashSet     TreeSet
            |           |
     interface SET interface TreeSet

Контракт - правило взаимодействия. Если объекы равны при сравнении через equals, то хеш коды таких объектов также должны быть равны, но не наоборот

Задание
    -Переопределить метод hashcode в на основаниие контракта. Создать множество и добавить туда 2 + 2 одинаковых студента и вывести на экран